node(){
    try {
        stage('Prepare for Deployment'){
            deleteDir()
            echo 'git clone'
            git branch: 'qa', url: 'ssh://git@bitbucket.cslico.com:7999/fred/facility-tracker.git'
            sh "npm run kubeMbv && npm run kubeIngressQa && npm run kubeUpdateDeploymentApiKqa && npm run kubeUpdateDeploymentClientKqa" 
        }
        stage('Build Api'){
            sh "npm run kubeApiBuildKqa" 
        }
        stage('Deploy Api'){
            sh "npm run kubeApiDeployKqa && npm run kubeApiApplyKqa" 
        }
        stage('Build Client'){
            sh "npm run kubeClientBuildKqa" 
        }
        stage('Deploy Client'){
            sh "npm run kubeClientDeployKqa && npm run kubeClientApplyKqa" 
        }
    }
    catch (Exception err) {
        currentBuild.result = 'UNSTABLE'
    }
    finally {
        notifyBuild(currentBuild.result)
    }
}

def notifyBuild(String buildStatus = 'STARTED') {
    // build status of null means successful
    buildStatus =  buildStatus ?: 'SUCCESSFUL'

    def committerEmail = sh (script: 'git --no-pager show -s --format=\'%ae\'', returnStdout: true).trim().split("@")[0];
//    committerEmail += "@cslico.com"
    def commitBranch = "QA"
    def commitLocation = "Louisville"
    def commitTime = sh (script: 'git log -1 --format=%ci --date=local', returnStdout: true).trim()
    def commitInfo = sh (script: 'git log -1 --pretty=format:"%s"', returnStdout: true).trim()
    def recips = "bcc:bjohnson@cslico.com, bcc:zeb.davis@cslico.com, bcc:sean.pitchford@cslico.com, bcc:justina.ervitarini@cslico.com, bcc:shellie.bayne@cslico.com"
//    def recips = "bcc:shellie.bayne@cslico.com"
    def subject = "${buildStatus}: '${env.JOB_NAME}'"
    def details = """
<table style="width: 100%;">
<tbody>
<tr style="background-color: #3366ff; color: #fff; width: 100%;">
<td style="padding: 20px; width: 100%; font-size: 130%;"><strong>${env.JOB_NAME}</strong></td>
</tr>
<tr>
<td style="padding: 40px;">
<table style="width: 100%;">
<tbody>
<tr>
<td style="font-size: 115%; width: 30%;">Jenkins Build Status:</td>
<td style="font-size: 115%;"><strong><span style="color: #ff0000;">${buildStatus}</span></strong></td>
</tr>
<tr>
<td style="font-size: 115%;">Environment:</td>
<td style="font-size: 115%;"><strong>${commitBranch}</strong></td>
</tr>
<tr>
<td style="font-size: 115%;">Location:</td>
<td style="font-size: 115%;"><strong>${commitLocation}</strong></td>
</tr>
<tr>
<td colspan="2">&nbsp;</td>
</tr>
<tr>
<td style="font-size: 100%;">*Last Committer:</td>
<td style="font-size: 100%; color: #3366ff;"><strong>${committerEmail}</strong></td>
</tr>
<tr>
<td style="font-size: 100%;">*Last Commit Time:</td>
<td style="font-size: 100%;"><strong>${commitTime}</strong></td>
</tr>
<tr>
<td style="font-size: 100%;">*Last Commit Notes:</td>
<td style="font-size: 100%;">${commitInfo}</td>
</tr>
<tr>
<td colspan="2">&nbsp;</td>
</tr>
<tr style="background-color: #eeeeee;">
<td style="font-size: 100%;" colspan="2"><em>For further details, see attached log or you can click the link below (requires Jenkins login):</em><br /><a style="color: #993300;" href="${BUILD_URL}consoleText" target="_blank" rel="noopener"><em>${BUILD_URL}consoleText</em></a></td>
</tr>
</tbody>
</table>
</td>
</tr>
<tr>
<td style="padding: 20px; color: #999999; background-color: #eeeeee; font-size: 85%;"><em>* If the Jenkins pipeline is manually triggered to run, the person who last commited a code change and the date they last commited will still be shown.&nbsp; If the last commit time is off by more than a few minutes from when you recieved this email, you'll know the pipeline was triggered manually.</em></td>
</tr>
</tbody>
</table>
"""

    // Send notifications
    emailext (
        to: recips,
        subject: subject,
        body: details,
        attachLog: true
    )
}